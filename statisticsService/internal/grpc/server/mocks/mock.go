// Code generated by MockGen. DO NOT EDIT.
// Source: grpcServer.go

// Package mock_server is a generated GoMock package.
package mock_server

import (
	context "context"
	reflect "reflect"

	models "github.com/Denterry/SocialNetwork/statisticsService/internal/domain/models"
	gomock "github.com/golang/mock/gomock"
)

// MockStatRepository is a mock of StatRepository interface.
type MockStatRepository struct {
	ctrl     *gomock.Controller
	recorder *MockStatRepositoryMockRecorder
}

// MockStatRepositoryMockRecorder is the mock recorder for MockStatRepository.
type MockStatRepositoryMockRecorder struct {
	mock *MockStatRepository
}

// NewMockStatRepository creates a new mock instance.
func NewMockStatRepository(ctrl *gomock.Controller) *MockStatRepository {
	mock := &MockStatRepository{ctrl: ctrl}
	mock.recorder = &MockStatRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatRepository) EXPECT() *MockStatRepositoryMockRecorder {
	return m.recorder
}

// GetAllPostsWithLikes mocks base method.
func (m *MockStatRepository) GetAllPostsWithLikes(ctx context.Context) ([]*models.PostTop, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllPostsWithLikes", ctx)
	ret0, _ := ret[0].([]*models.PostTop)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllPostsWithLikes indicates an expected call of GetAllPostsWithLikes.
func (mr *MockStatRepositoryMockRecorder) GetAllPostsWithLikes(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllPostsWithLikes", reflect.TypeOf((*MockStatRepository)(nil).GetAllPostsWithLikes), ctx)
}

// GetLikesViewsOnPost mocks base method.
func (m *MockStatRepository) GetLikesViewsOnPost(arg0 context.Context, arg1 int64) (uint64, uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLikesViewsOnPost", arg0, arg1)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(uint64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetLikesViewsOnPost indicates an expected call of GetLikesViewsOnPost.
func (mr *MockStatRepositoryMockRecorder) GetLikesViewsOnPost(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLikesViewsOnPost", reflect.TypeOf((*MockStatRepository)(nil).GetLikesViewsOnPost), arg0, arg1)
}

// GetTopNPosts mocks base method.
func (m *MockStatRepository) GetTopNPosts(arg0 context.Context, arg1 int64, arg2 string) ([]*models.PostTop, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTopNPosts", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*models.PostTop)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTopNPosts indicates an expected call of GetTopNPosts.
func (mr *MockStatRepositoryMockRecorder) GetTopNPosts(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTopNPosts", reflect.TypeOf((*MockStatRepository)(nil).GetTopNPosts), arg0, arg1, arg2)
}
