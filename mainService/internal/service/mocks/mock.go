// Code generated by MockGen. DO NOT EDIT.
// Source: user.service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	errors "github.com/Denterry/SocialNetwork/mainService/error"
	model "github.com/Denterry/SocialNetwork/mainService/model"
	gomock "github.com/golang/mock/gomock"
)

// MockUserService is a mock of UserService interface.
type MockUserService struct {
	ctrl     *gomock.Controller
	recorder *MockUserServiceMockRecorder
}

// MockUserServiceMockRecorder is the mock recorder for MockUserService.
type MockUserServiceMockRecorder struct {
	mock *MockUserService
}

// NewMockUserService creates a new mock instance.
func NewMockUserService(ctrl *gomock.Controller) *MockUserService {
	mock := &MockUserService{ctrl: ctrl}
	mock.recorder = &MockUserServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserService) EXPECT() *MockUserServiceMockRecorder {
	return m.recorder
}

// ChangeInfo mocks base method.
func (m *MockUserService) ChangeInfo(request *model.ChangeInfoRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeInfo", request)
	ret0, _ := ret[0].(error)
	return ret0
}

// ChangeInfo indicates an expected call of ChangeInfo.
func (mr *MockUserServiceMockRecorder) ChangeInfo(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeInfo", reflect.TypeOf((*MockUserService)(nil).ChangeInfo), request)
}

// CurrentUser mocks base method.
func (m *MockUserService) CurrentUser(request *model.UserIdRequest) (*model.User, errors.ServiceError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CurrentUser", request)
	ret0, _ := ret[0].(*model.User)
	ret1, _ := ret[1].(errors.ServiceError)
	return ret0, ret1
}

// CurrentUser indicates an expected call of CurrentUser.
func (mr *MockUserServiceMockRecorder) CurrentUser(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CurrentUser", reflect.TypeOf((*MockUserService)(nil).CurrentUser), request)
}

// GetUserInfo mocks base method.
func (m *MockUserService) GetUserInfo(request *model.UserIdRequest) (*model.FullUser, errors.ServiceError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserInfo", request)
	ret0, _ := ret[0].(*model.FullUser)
	ret1, _ := ret[1].(errors.ServiceError)
	return ret0, ret1
}

// GetUserInfo indicates an expected call of GetUserInfo.
func (mr *MockUserServiceMockRecorder) GetUserInfo(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserInfo", reflect.TypeOf((*MockUserService)(nil).GetUserInfo), request)
}

// Retrieve mocks base method.
func (m *MockUserService) Retrieve(request *model.RetrieveRequest) (*model.User, errors.ServiceError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Retrieve", request)
	ret0, _ := ret[0].(*model.User)
	ret1, _ := ret[1].(errors.ServiceError)
	return ret0, ret1
}

// Retrieve indicates an expected call of Retrieve.
func (mr *MockUserServiceMockRecorder) Retrieve(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Retrieve", reflect.TypeOf((*MockUserService)(nil).Retrieve), request)
}

// Signin mocks base method.
func (m *MockUserService) Signin(request *model.SigninRequest) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Signin", request)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Signin indicates an expected call of Signin.
func (mr *MockUserServiceMockRecorder) Signin(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Signin", reflect.TypeOf((*MockUserService)(nil).Signin), request)
}

// Signup mocks base method.
func (m *MockUserService) Signup(request *model.SignupRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Signup", request)
	ret0, _ := ret[0].(error)
	return ret0
}

// Signup indicates an expected call of Signup.
func (mr *MockUserServiceMockRecorder) Signup(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Signup", reflect.TypeOf((*MockUserService)(nil).Signup), request)
}
